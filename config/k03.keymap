#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        enc_vol: enc_vol {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_VOL";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;

            tap-ms = <10>;
        };
    };

    combos {
        compatible = "zmk,combos";

        lang_switch {
            bindings = <&kp LG(SPACE)>;
            key-positions = <39 40>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <10 11>;
        };

        dog {
            bindings = <&kp AT_SIGN>;
            key-positions = <1 2>;
        };

        hash {
            bindings = <&kp POUND>;
            key-positions = <2 3>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <10 22>;
        };

        num_ru {
            bindings = <&runumero>;
            key-positions = <14 2>;
        };
    };

    macros {
        runumero: runumero {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RU_NUMERO>;
            label = "RUNUMERO";
        };

        func_template: func_template {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LC(NUMBER_2)>,
                <&macro_wait_time 5>,
                <&kp A &kp S &kp Y &kp N &kp C &kp SPACE &kp F &kp U &kp N &kp C &kp T &kp I &kp O &kp N &kp SPACE &kp O &kp N &kp LS(I) &kp N &kp I &kp T &kp LPAR &kp RPAR &kp COLON &kp SPACE &kp LS(P) &kp R &kp O &kp M &kp I &kp S &kp E &kp LT &kp V &kp O &kp I &kp D &kp GT &kp SPACE &kp LBRC &kp RBRC>,
                <&macro_wait_time 5>,
                <&kp LEFT &kp ENTER &kp LEFT &kt LCTRL &kp LEFT &kp LEFT &kp LEFT &kp LEFT &kp LEFT &kt LEFT_SHIFT &kp LEFT &kt LCTRL &kt LSHFT>;

            label = "FUNC_TEMPLATE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                          &kp N6  &kp N7     &kp N8     &kp N9    &kp N0    &kp BSPC
&kp ESC    &kp Q   &kp W     &kp E     &kp R      &kp T                           &kp Y   &kp U      &kp I      &kp O     &kp P     &kp BSLH
&kp TAB    &kp A   &kp S     &kp D     &kp F      &kp G                           &kp H   &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp V      &kp B   &kp LBKT     &kp RBKT   &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                   &kp LGUI  &kp LALT  &kp LCTRL  &mo 1   &kp SPACE    &kp ENTER  &mo 2   &kp RCTRL  &kp RALT   &kp RGUI
            >;

            display-name = "Base";
            sensor-bindings =
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>;
        };

        nav {
            bindings = <
&kp F12  &kp F1  &kp F2        &kp F3    &kp F4         &kp F5                     &kp F6           &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans   &trans  &kp HOME      &kp UP    &kp END        &kp INS                    &kp PG_UP        &kp N7  &kp N8  &kp N9  &trans   &kp LC(NUMBER_1)
&trans   &trans  &kp LEFT      &kp DOWN  &kp RIGHT      &kp RET                    &kp PG_DN        &kp N4  &kp N5  &kp N6  &trans   &kp LC(NUMBER_2)
&trans   &trans  &kp LC(LEFT)  &kp CAPS  &kp LC(RIGHT)  &kp DEL  &trans    &trans  &kp PRINTSCREEN  &kp N1  &kp N2  &kp N3  &trans   &trans
                 &trans        &trans    &trans         &trans   &trans    &trans  &mo 3            &trans  &kp N0  &trans
            >;

            display-name = "Navigation";
            sensor-bindings =
                <&inc_dec_kp TAB LS(TAB)>,
                <&inc_dec_kp TAB LS(TAB)>,
                <&inc_dec_kp TAB LS(TAB)>,
                <&inc_dec_kp TAB LS(TAB)>,
                <&inc_dec_kp TAB LS(TAB)>,
                <&inc_dec_kp TAB LS(TAB)>;
        };

        sym {
            bindings = <
&trans  &trans    &kp AT    &kp DLLR   &kp HASH  &trans                       &trans     &trans    &kp CARET  &trans    &trans    &trans
&trans  &trans    &kp LT    &kp EQUAL  &kp GT    &kp GRAVE                    &trans     &kp LBKT  &kp UNDER  &kp RBKT  &trans    &trans
&trans  &kp BSLH  &kp LPAR  &kp MINUS  &kp RPAR  &kp PLUS                     &kp PRCNT  &kp LBRC  &kp SEMI   &kp RBRC  &kp EXCL  &trans
&trans  &trans    &kp STAR  &kp COLON  &kp FSLH  &trans     &trans    &trans  &trans     &kp PIPE  &kp TILDE  &kp AMPS  &trans    &trans
                  &trans    &trans     &trans    &mo 3      &trans    &trans  &trans     &trans    &trans     &trans
            >;

            display-name = "Symbols";
        };

        adj {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL
&trans       &trans  &trans  &trans  &trans  &trans                    &trans        &trans        &trans            &trans        &trans        &trans
&trans       &trans  &trans  &trans  &trans  &trans                    &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &trans        &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans    &trans  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &trans        &studio_unlock
                     &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans            &trans
            >;

            display-name = "Adjust";
        };
    };
};
